const merge = require("lodash/merge"), Query = require("./resolvers/Query")["resolvers"], Account = require("./resolvers/Account")["resolvers"], RichContent = require("./resolvers/RichContent")["resolvers"], RichEmbed = require("./resolvers/RichEmbed")["resolvers"], Post = require("./resolvers/Post")["resolvers"], AccountSection = require("./resolvers/AccountSection")["resolvers"], AccountThread = require("./resolvers/AccountThread")["resolvers"], Score = require("./resolvers/Score")["resolvers"], Thread = require("./resolvers/Thread")["resolvers"], Notification = require("./resolvers/Notification")["resolvers"], AccountReaction = require("./resolvers/AccountReaction")["resolvers"], AccountRelationship = require("./resolvers/AccountRelationship")["resolvers"], ChannelResolvers = require("./resolvers/Channel")["resolvers"], ChannelRecipientResolvers = require("./resolvers/ChannelRecipient")["resolvers"], Community = require("./resolvers/Community")["resolvers"], AccountCommunity = require("./resolvers/AccountCommunity")["resolvers"], Role = require("./resolvers/Role")["resolvers"], AccountCommunityRole = require("./resolvers/AccountCommunityRole")["resolvers"], IndexerRule = require("./resolvers/IndexerRule")["resolvers"], CommunityAsset = require("./resolvers/assets/CommunityAsset")["resolvers"], Quest = require("./resolvers/Quest")["resolvers"], MutationResolvers = require("./resolvers/mutations")["resolvers"], QuestsResolvers = require("./resolvers/queries")["resolvers"], CommunityResolvers = require("./resolvers/community/index.js")["resolvers"], AccountInventory = require("./resolvers/AccountInventory.js")["resolvers"], resolvers = merge(Account, AccountSection, AccountThread, AccountRelationship, AccountCommunityRole, Thread, Query, Score, RichContent, AccountReaction, Notification, Community, Post, AccountCommunity, Role, IndexerRule, CommunityAsset, Quest, ChannelResolvers, ChannelRecipientResolvers, AccountInventory, CommunityResolvers, MutationResolvers, QuestsResolvers, RichEmbed);

module.exports = {
  resolvers: resolvers
};